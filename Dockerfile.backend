FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Install Google ADK
RUN pip install google-adk

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p uploads teamcentre_mock/opportunities

# Expose ports (Backend on 8080, ADK on 8000)
EXPOSE 8080
EXPOSE 8000

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV GOOGLE_APPLICATION_CREDENTIALS=/app/service-account.json

# Create startup script with health checks
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
# Function to check if service is running\n\
check_service() {\n\
    local port=$1\n\
    local service_name=$2\n\
    for i in {1..30}; do\n\
        if curl -f http://localhost:$port/health 2>/dev/null || curl -f http://localhost:$port/ 2>/dev/null; then\n\
            echo "$service_name is ready"\n\
            return 0\n\
        fi\n\
        echo "Waiting for $service_name... ($i/30)"\n\
        sleep 2\n\
    done\n\
    echo "$service_name failed to start"\n\
    return 1\n\
}\n\
\n\
# Start ADK server in background\n\
echo "Starting ADK server..."\n\
cd /app && adk api_server --host 0.0.0.0 --port 8000 &\n\
ADK_PID=$!\n\
\n\
# Wait for ADK server to start\n\
sleep 10\n\
\n\
# Start FastAPI backend\n\
echo "Starting FastAPI backend..."\n\
uvicorn main:app --host 0.0.0.0 --port 8080 &\n\
BACKEND_PID=$!\n\
\n\
# Wait for both processes\n\
wait $ADK_PID $BACKEND_PID' > /app/start.sh

RUN chmod +x /app/start.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Run both services
CMD ["/app/start.sh"]
